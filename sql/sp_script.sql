-- Tabla de clientes
CREATE TABLE clientes (
    id_cliente    VARCHAR2(50) PRIMARY KEY,
    nombre        VARCHAR2(100),
    documento     VARCHAR2(50),
    email         VARCHAR2(100),
    telefono      VARCHAR2(50)
);

-- Tabla de vehículos
CREATE TABLE vehiculos (
    id_vehiculo   NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    placa         VARCHAR2(20) UNIQUE,
    marca         VARCHAR2(50),
    modelo        VARCHAR2(50),
    precio        NUMBER,
    id_cliente    VARCHAR2(50),
    CONSTRAINT fk_cliente FOREIGN KEY (id_cliente)
        REFERENCES clientes(id_cliente)
);


CREATE TABLE ventas (
    id_venta   NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_cliente VARCHAR2(50) REFERENCES clientes(id_cliente),
    placa      VARCHAR2(20) REFERENCES vehiculos(placa),
    fecha_venta DATE,
    valor      NUMBER
);

CREATE OR REPLACE PROCEDURE registrar_venta_xml(p_xml CLOB, p_result OUT VARCHAR2) IS
    v_cliente_id     VARCHAR2(50);
    v_cliente_nombre VARCHAR2(100);
    v_documento      VARCHAR2(50);
    v_email          VARCHAR2(100);
    v_telefono       VARCHAR2(20);

    v_placa          VARCHAR2(20);
    v_marca          VARCHAR2(50);
    v_modelo         VARCHAR2(50);
    v_precio         NUMBER;
BEGIN
    -- Parsear XML con XMLTABLE
    SELECT id, nombre, documento, email, telefono,
           placa, marca, modelo, precio
    INTO   v_cliente_id, v_cliente_nombre, v_documento, v_email, v_telefono,
           v_placa, v_marca, v_modelo, v_precio
    FROM XMLTABLE(
        xmlnamespaces('http://example.com/ventaVehiculos' AS "ven"),
        '/ven:RegistrarVenta'
        PASSING XMLTYPE(p_xml)
        COLUMNS
            id        VARCHAR2(50)  PATH 'ven:cliente/ven:Id',
            nombre    VARCHAR2(100) PATH 'ven:cliente/ven:Nombre',
            documento VARCHAR2(50)  PATH 'ven:cliente/ven:Documento',
            email     VARCHAR2(100) PATH 'ven:cliente/ven:Email',
            telefono  VARCHAR2(20)  PATH 'ven:cliente/ven:Telefono',
            placa     VARCHAR2(20)  PATH 'ven:vehiculo/ven:Placa',
            marca     VARCHAR2(50)  PATH 'ven:vehiculo/ven:Marca',
            modelo    VARCHAR2(50)  PATH 'ven:vehiculo/ven:Modelo',
            precio    NUMBER        PATH 'ven:vehiculo/ven:Precio'
    );

    -- Insertar cliente si no existe
    MERGE INTO clientes c
    USING (SELECT v_cliente_id AS id_cliente,
                  v_cliente_nombre AS nombre,
                  v_documento AS documento,
                  v_email AS email,
                  v_telefono AS telefono
           FROM dual) src
    ON (c.id_cliente = src.id_cliente)
    WHEN NOT MATCHED THEN
        INSERT (id_cliente, nombre, documento, email, telefono)
        VALUES (src.id_cliente, src.nombre, src.documento, src.email, src.telefono);

    -- Insertar vehículo si no existe
    MERGE INTO vehiculos v
    USING (SELECT v_placa AS placa, v_marca AS marca, v_modelo AS modelo, v_precio AS precio FROM dual) src
    ON (v.placa = src.placa)
    WHEN NOT MATCHED THEN
        INSERT (placa, marca, modelo, precio)
        VALUES (src.placa, src.marca, src.modelo, src.precio);

    -- Registrar venta
    INSERT INTO ventas (id_cliente, placa, fecha_venta, valor)
    VALUES (v_cliente_id, v_placa, SYSDATE, v_precio);

    p_result := 'OK: Venta registrada';
EXCEPTION
    WHEN OTHERS THEN
        p_result := 'ERROR: ' || SQLERRM;
END;
/

COMMIT;

-- Insertar clientes
INSERT INTO clientes (id_cliente, nombre, documento, email, telefono)
VALUES ('1001', 'Juan Pérez', 'CC123456', 'juan.perez@example.com', '3101234567');

INSERT INTO clientes (id_cliente, nombre, documento, email, telefono)
VALUES ('1002', 'María Gómez', 'CC987654', 'maria.gomez@example.com', '3109876543');

INSERT INTO clientes (id_cliente, nombre, documento, email, telefono)
VALUES ('1003', 'Carlos López', 'CC555666', 'carlos.lopez@example.com', '3115556667');

INSERT INTO clientes (id_cliente, nombre, documento, email, telefono)
VALUES ('1004', 'Ana Torres', 'CC444333', 'ana.torres@example.com', '3004443332');

INSERT INTO clientes (id_cliente, nombre, documento, email, telefono)
VALUES ('1005', 'Pedro Ramírez', 'CC111222', 'pedro.ramirez@example.com', '3121112223');

-- Ahora insertamos vehículos (relacionados a cada cliente por id_cliente):

-- Insertar vehículos
INSERT INTO vehiculos (placa, marca, modelo, precio, id_cliente)
VALUES ('ABC123', 'Toyota', 'Corolla', 85000, '1001');

INSERT INTO vehiculos (placa, marca, modelo, precio, id_cliente)
VALUES ('XYZ789', 'Honda', 'Civic', 92000.75, '1002');

INSERT INTO vehiculos (placa, marca, modelo, precio, id_cliente)
VALUES ('LMN456', 'Mazda', 'CX-5', 120000, '1003');

INSERT INTO vehiculos (placa, marca, modelo, precio, id_cliente)
VALUES ('JKL321', 'Chevrolet', 'Onix', 78000, '1004');

INSERT INTO vehiculos (placa, marca, modelo, precio, id_cliente)
VALUES ('QWE987', 'Nissan', 'Versa', 69000.50, '1005');

COMMIT;

SELECT * FROM CLIENTES;
SELECT * FROM VEHICULOS;

DROP TABLE CLIENTES;
DROP TABLE VEHICULOS;

SHOW ERRORS PROCEDURE registrar_venta_xml;